"""
Django settings for wbd project.

Generated by 'django-admin startproject' using Django 2.1.2.

For more information on this file, see
https://docs.djangoproject.com/en/2.1/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/2.1/ref/settings/
"""

import os

import logging.config
from django.utils.log import DEFAULT_LOGGING

"""
    Note for running in dev and on IIS
    for dev, this alias (url prefix) is blank
    for IIS - use production.py settings, which loads base, then production where this is set to IIS's name
    for the app (i.e. 'wbd/'

"""
IIS_APP_ALIAS = ''

# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/2.1/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = '!!!USE-VALUE-FROM-LOCAL-SETTINGS!!!'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = ['!!!USE-VALUE-FROM-LOCAL-SETTINGS!!!',]



# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'rest_framework',
    'rest_framework_datatables',
    'wbdmap',
    'wbdchart',
    'wbddata',
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'wbd.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [os.path.join(BASE_DIR, 'templates'),
                 os.path.join(BASE_DIR, 'wbd', 'templates'),
                 os.path.join(BASE_DIR, 'wbdmap', 'templates'),
                 os.path.join(BASE_DIR, 'wbdchart'),

                 ]
        ,
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.contrib.auth.context_processors.auth',
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
                'django.template.context_processors.static',
                'django.template.context_processors.csrf',

                'wbd.context_processors.default',
            ],
        },
    },
]

WSGI_APPLICATION = 'wbd.wsgi.application'


# Database
# https://docs.djangoproject.com/en/2.1/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': os.path.join(BASE_DIR, 'db.sqlite3'),
    }
}


# Password validation
# https://docs.djangoproject.com/en/2.1/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/2.1/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_L10N = True

USE_TZ = True

'''
    customize logging from https://gist.github.com/ipmb/0618f44dc5270f9a2be2826d0d933ed7
'''
# LOGGING_CONFIG = None

# LOGLEVEL = os.environ.get('LOGLEVEL', 'info').upper()
from datetime import date
LOGGING = {
    'version': 1,
    'disable_existing_loggers': False,
    'formatters': {
        'simple': {
            'format': '[%(asctime)s %(module)s] %(levelname)s: %(message)s'
        },
    },
    'handlers': {
        'console': {
            'level': 'DEBUG',
            'class': 'logging.StreamHandler',
            'formatter': 'simple',
        },
        'developer': {
            'level': 'DEBUG',
            'class': 'logging.FileHandler',
            'filename': os.path.join(BASE_DIR, 'wbddata', 'static', 'log', 'debug_' + date.today().strftime('%d%m%Y') + '.log'),
            'formatter':'simple',
        }
    },
    'loggers': {
        'django': {
            'handlers': ['console', 'developer'],
            'level': 'WARNING',
            'propagate': True,
        },
        'django.db.backend': {
            'handlers': ['console', 'developer'],
            'level': 'WARNING',
            'propagate': True,
        },
        'wbddata.models': {
            'handlers': ['console', 'developer'],
            'level': 'DEBUG',
            'propagate': True,
        },
        'wbddata.management.commands': {
            'handlers': ['console', 'developer'],
            'level': 'DEBUG',
            'propagate': True,
        },
    },
}

# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/2.1/howto/static-files/

STATIC_URL = '/static/'

STATIC_ROOT = (os.path.join(BASE_DIR, 'static'))

STATICFILES_DIRS = (
  os.path.join(BASE_DIR, 'wbd', 'static'),
  os.path.join(BASE_DIR, 'wbdmap', 'static'),
  os.path.join(BASE_DIR, 'wbdchart', 'static'),
)

STATICFILES_FINDERS = (
  'django.contrib.staticfiles.finders.FileSystemFinder',
  'django.contrib.staticfiles.finders.AppDirectoriesFinder',
)

'''
these are used to load data initially
'''
HUC12_ATTRIBUTES_FILE = os.path.join(BASE_DIR, 'wbddata', 'static', 'data', 'huc12_attributes.csv')

HUC12_ROUTE_FILE = os.path.join(BASE_DIR, 'wbddata', 'static', 'data', 'huc12_route.csv')

HUC12_ROUTE_FILE_PICKLE = os.path.join(BASE_DIR, 'wbddata', 'static', 'data', 'navigator_huc12.p')

HUC_FILE = os.path.join(BASE_DIR, 'wbddata', 'static', 'data',  'huc_hydrologic_unit_codes.csv')

WBD_ATTRIBUTES_LOOKUPLIST = os.path.join(BASE_DIR, 'wbddata', 'static', 'data',  'wbd_attributes_lookuplist.csv')

WBD_ATTRIBUTES = os.path.join(BASE_DIR, 'wbddata', 'static', 'data',  'wbd_attributes.csv')

WBD_GEOGRAPHY = os.path.join(BASE_DIR, 'wbddata', 'static', 'data',  'geography.csv')

#TODO: figure a better way to be flexible here without needing this
WBD_METRICS_2016 = os.path.join(BASE_DIR, 'wbddata', 'static', 'data',  'metrics2016.csv')

WBD_METRICS_2017 = os.path.join(BASE_DIR, 'wbddata', 'static', 'data',  'metrics2017.csv')

WBD_METRICS_2020 = os.path.join(BASE_DIR, 'wbddata', 'static', 'data',  'metrics2020.csv')

REST_FRAMEWORK = {
    # Use Django's standard `django.contrib.auth` permissions,
    # or allow read-only access for unauthenticated users.
    'DEFAULT_PERMISSION_CLASSES': [
        'rest_framework.permissions.DjangoModelPermissionsOrAnonReadOnly',
        'rest_framework.permissions.AllowAny',
    ],
    'DEFAULT_RENDERER_CLASSES': (
        'rest_framework_datatables.renderers.DatatablesRenderer',
        'rest_framework.renderers.JSONRenderer',
        'rest_framework.renderers.BrowsableAPIRenderer',
        'rest_framework_csv.renderers.CSVRenderer', #2019-05-05
        'rest_framework.renderers.StaticHTMLRenderer',
        'rest_framework.renderers.TemplateHTMLRenderer',
        'rest_framework_xml.renderers.XMLRenderer',

    ),
    'DEFAULT_FILTER_BACKENDS': (
        'rest_framework_datatables.filters.DatatablesFilterBackend',
    ),
    # 'DEFAULT_PAGINATION_CLASS': 'wbddata.pagination.WBDCustomPagination',
    'DEFAULT_PAGINATION_CLASS': 'rest_framework_datatables.pagination.DatatablesPageNumberPagination',
    # 'DEFAULT_PAGINATION_CLASS': 'rest_framework.pagination.PageNumberPagination',
    'PAGE_SIZE': 10,

}


# http://127.0.0.1:82/api/wbdattributes/
CACHES = {
    'default': {
        'BACKEND': 'django.core.cache.backends.locmem.LocMemCache',
        # 'LOCATION': 'unique-snowflake',
        'TIMEOUT': 300,
    },
    'wbddata.navigation': {
        'BACKEND': 'django.core.cache.backends.filebased.FileBasedCache',
        'LOCATION': os.path.join(BASE_DIR, 'wbddata', 'static', 'data',  'django_cache'),
        'TIMEOUT': None,
    },
    'wbddata.attributes': {
        'BACKEND': 'django.core.cache.backends.filebased.FileBasedCache',
        'LOCATION': os.path.join(BASE_DIR, 'wbddata', 'static', 'data', 'django_cache'),
        'TIMEOUT': None,
    }
}
